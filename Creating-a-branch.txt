Creating a branch
You can create branches on Git and Mercurial repositories. Git branches always have a name, but Mercurial has the concept of a branch and a named branch. For more information, Steve Losh's guide is a good resource explaining branching in the two systems.

Create a Git branch
There are three ways to create a Git branch: In Bitbucket, at your local command line, or in Jira Software.

To create a branch from Bitbucket
From the repository, click + in the global sidebar and select Create a branch under Get to work.
From the popup that appears, select a Type (if using the Branching model), enter a Branch name and click Create.

Note

Whenever you create a branch from Bitbucket or from an issue in Jira Software, Bitbucket removes characters that are invalid in references, file systems or shell, and replace them with a valid substitute.

After you create a branch, you need to check it out from your local system. Use the fetch and checkout commands that Bitbucket provides, similar to the following:

$ git fetch && git checkout <feature>
Make your changes locally and then add, commit, and push your changes to the <feature> branch:

$ git add .
$ git commit -m "adding a change from the feature branch"
$ git push origin <feature>
Click the Source page of your repository. You should see both the master and the <feature> branch in the branches dropdown. When you make commits to the feature branch, you'll see the files specific to that branch.

To create a branch locally
You can create a branch locally as long as you have a cloned version of the repo.

From your terminal window, list the branches on your repository.

$ git branch
* master
This output indicates there is a single branch, the master and the asterisk indicates it is currently active.

Create a new feature branch in the repository

$ git branch <feature_branch>
Switch to the feature branch to work on it.

$ git checkout <feature_branch>
You can list the branches again with the git branch command.

Commit the change to the feature branch:

$ git add .
$ git commit -m "adding a change from the feature branch"
Switch back to the master branch.

$ git checkout master
Push the feature branch to Bitbucket:

$ git push origin <feature_branch>
View the Source page of your repository in Bitbucket. You should see both the master and the feature branch. When you select the feature branch, you see the Source page from that perspective. Select the feature branch to view its Recent commits.